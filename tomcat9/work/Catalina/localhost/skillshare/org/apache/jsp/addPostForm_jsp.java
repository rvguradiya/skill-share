/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.14
 * Generated at: 2019-04-08 18:09:56 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class addPostForm_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!--Add Post Modal-->\r\n");
      out.write("<div class=\"modal fade\" id=\"myModal\" style=\"background-color: black;z-index: 100001 !important;\">\r\n");
      out.write("                                                      <!---if not z index then modal is seen behind the fix navbar-->\r\n");
      out.write("  <div class=\"modal-dialog modal-lg\">\r\n");
      out.write("    <div class=\"modal-content\">\r\n");
      out.write("      <!-- Modal Header -->\r\n");
      out.write("      <div class=\"modal-header\">\r\n");
      out.write("        <h4 class=\"modal-title\">Add Post\r\n");
      out.write("        </h4>\r\n");
      out.write("        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" onclick=\"javascript:formReset()\">&times;\r\n");
      out.write("        </button>\r\n");
      out.write("      </div>\r\n");
      out.write("      <!-- Modal body -->\r\n");
      out.write("      <div class=\"modal-body\">\r\n");
      out.write("        <form action=\"/skillshare/addThread\" id=\"addPostForm\" method=\"POST\" enctype=\"multipart/form-data\">\r\n");
      out.write("          <div class=\"form-group\">\r\n");
      out.write("            <label for=\"imageFile\" id=\"addIcon\">Add Image\r\n");
      out.write("              <img src=\"images/add_icon.png\" class=\"addIcon\">\r\n");
      out.write("            </label> \r\n");
      out.write("            <!-- image preview division -->\r\n");
      out.write("            <div id=\"preview\" class=\"form-control\" style=\"display:none;height:auto;text-align: center\">\r\n");
      out.write("              <input type=\"file\" name=\"imageFile\" id=\"imageFile\" style=\"display: none\" (click)=\"fileInput.value = null\" multiple>\r\n");
      out.write("              <img src=\"\" id=\"postImage\" class=\"postImage rounded img-fluid\" style=\"width: 15rem;height: 15rem\">\r\n");
      out.write("              <br>\r\n");
      out.write("              <label  for=\"imageFile\" style=\"font-size: 20px;color: green;cursor: pointer;\">Change\r\n");
      out.write("              </label>\r\n");
      out.write("              <label id=\"cancelImageUpload\" style=\"font-size: 20px;color: red;cursor: pointer;\">Cancel\r\n");
      out.write("              </label>\r\n");
      out.write("            </div>\r\n");
      out.write("            <br>\r\n");
      out.write("            <label for=\"topic\">Topic:\r\n");
      out.write("            </label>\r\n");
      out.write("            <input type=\"text\" name=\"topic\" id=\"topic\" class=\"form-control\" required=\"\">\r\n");
      out.write("            <label for=\"heading\">Heading:\r\n");
      out.write("            </label>\r\n");
      out.write("            <input type=\"text\" name=\"heading\" id=\"heading\" class=\"form-control\" required=\"\">\r\n");
      out.write("            <!--later it may be heading1 heading2 heading3 and so on description1 description2  we check all in request in servlet and make separate table to store them all three subpart (img heading dscription)  main table consist of (postId userID Title)-->\r\n");
      out.write("            <label for=\"content\">Description:\r\n");
      out.write("            </label>\r\n");
      out.write("            <textarea class=\"form-control\" rows=\"5\" id=\"content\" name=\"content\" style=\"resize: none;\" required=\"\">\r\n");
      out.write("            </textarea>\r\n");
      out.write("            <label for=\"link\">Add Link:\r\n");
      out.write("            </label>\r\n");
      out.write("            <input type=\"text\" name=\"link\" id=\"link\" class=\"form-control\" >\r\n");
      out.write("            <button type=\"submit\" class=\"btn btn-primary form-control\" style=\"border-radius: 100px;margin-top: 15px;letter-spacing: 1px\">Add Post\r\n");
      out.write("            </button>\r\n");
      out.write("            <button type=\"button\" class=\"btn btn-secondary form-control\" data-dismiss=\"modal\" style=\"border-radius: 100px;margin-top: 10px;letter-spacing: 1px\">Cancel\r\n");
      out.write("            </button>\r\n");
      out.write("          </div>\r\n");
      out.write("        </form>\r\n");
      out.write("      </div>\r\n");
      out.write("      <!-- Modal footer -->\r\n");
      out.write("      <div class=\"modal-footer\">\r\n");
      out.write("      </div>\r\n");
      out.write("    </div>\r\n");
      out.write("  </div>\r\n");
      out.write("</div>\r\n");
      out.write("<!--modal ends-->\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
