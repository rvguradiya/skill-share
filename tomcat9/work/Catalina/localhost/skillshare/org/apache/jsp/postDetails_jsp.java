/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.14
 * Generated at: 2019-04-08 22:43:57 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class postDetails_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("  <head>\r\n");
      out.write("    <title>\r\n");
      out.write("    </title>\r\n");
      out.write("\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "library.jsp", out, false);
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

HttpSession s=request.getSession();
//System.out.println(Integer.parseInt((request.getParameter("threadId"))+3));
//we get the thread details from database and check their type to display further information.
//we also get user details from database and display them on postDetails.jsp
//System.out.println(request.getParameter("abc"));

      out.write("\r\n");
      out.write("<label id=\"questionId\" style=\"display: none;\">");
      out.print(request.getParameter("threadId"));
      out.write("</label>\r\n");
      out.write("<label id=\"userId\" style=\"display: none;\">");
      out.print(request.getParameter("userId"));
      out.write("</label>\r\n");
      out.write("<label id=\"questionId\" style=\"display:none;\">");
      out.print(request.getParameter("threadId"));
      out.write("</label>\r\n");
      out.write("\r\n");
      out.write("<label id=\"logInInfo\" style=\"display:;\">");
      out.print(s.getAttribute("userId"));
      out.write("</label>\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("//service function to get post Details and comments of that post start \r\n");
      out.write("\r\n");
      out.write("function loadThreadDetails()\r\n");
      out.write("{\r\n");
      out.write("//alert(\"load hua\");\r\n");
      out.write("pid=document.getElementById(\"questionId\").innerHTML;\r\n");
      out.write("uid=document.getElementById(\"userId\").innerHTML;\r\n");
      out.write("var threadJSON={\r\n");
      out.write("\"threadId\":pid\r\n");
      out.write("};\r\n");
      out.write("var httpRequest=new XMLHttpRequest();\r\n");
      out.write("httpRequest.onreadystatechange=function(){\r\n");
      out.write("if(this.readyState==4 && this.status==200)\r\n");
      out.write("{\r\n");
      out.write("var data=httpRequest.responseText;\r\n");
      out.write("var applicationResponse=JSON.parse(data);\r\n");
      out.write("//var threads=[];\r\n");
      out.write("var jsonThread=applicationResponse.thread;\r\n");
      out.write("var jsonThreadComments=applicationResponse.comments;\r\n");
      out.write("\r\n");
      out.write("var threadHeading=jsonThread.threadHeading;\r\n");
      out.write("var threadCreatedDate=jsonThread.threadCreatedDate;\r\n");
      out.write("var threadImage=jsonThread.threadImage;\r\n");
      out.write("var threadContent=jsonThread.threadContent;\r\n");
      out.write("var userName=jsonThread.userName;\r\n");
      out.write("var userProfile=jsonThread.userProfile;\r\n");
      out.write("var email=jsonThread.email;\r\n");
      out.write("var city=jsonThread.city;\r\n");
      out.write("var age=jsonThread.age;\r\n");
      out.write("var designation=jsonThread.designation;\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("//alert(jsonThread);\r\n");
      out.write("//alert(jsonThreadComments);\r\n");
      out.write("var l=jsonThreadComments.length;\r\n");
      out.write("createPost(pid,uid,threadHeading,threadContent,threadCreatedDate,threadImage,userName,userProfile,l);\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("for(var i=0;i<l;i++)\r\n");
      out.write("{\r\n");
      out.write("   //work to append comments\r\n");
      out.write("  var threadCommentId=jsonThreadComments[i].threadCommentId;\r\n");
      out.write("  var threadCommentContent=jsonThreadComments[i].threadCommentContent;\r\n");
      out.write("  var threadCommentCreatedDate=jsonThreadComments[i].threadCommentCreatedDate;\r\n");
      out.write("  var commentUserName=jsonThreadComments[i].userName;\r\n");
      out.write("  var commentUserProfile=jsonThreadComments[i].userProfile;\r\n");
      out.write("  var commentUserCity=jsonThreadComments[i].city;\r\n");
      out.write("  var commentUserAge=jsonThreadComments[i].age;\r\n");
      out.write("  var commentUserDesignation=jsonThreadComments[i].designation;\r\n");
      out.write("  createCommentBox(pid,threadCommentContent,threadCommentCreatedDate,commentUserProfile,commentUserName,threadCommentId);\r\n");
      out.write("  \r\n");
      out.write(" //alert(code+\" \"+subject+\" \"+heading+\" \"+content+\" \"+link+\" \"+imagePath+\" \"+type+\" \"+userId+\" \"+time);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("}\r\n");
      out.write("}\r\n");
      out.write(";\r\n");
      out.write("httpRequest.open(\"POST\",\"getThreadDetails\",true);\r\n");
      out.write("httpRequest.setRequestHeader(\"content-type\",\"application/x-www-form-urlencoded\");\r\n");
      out.write("httpRequest.send(JSON.stringify(threadJSON));\r\n");
      out.write("//why this is not a request of type GET\r\n");
      out.write("}\r\n");
      out.write("//service function to get post Details and comments of that post ends\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!--this how to use java variables value inside javascript function-->\r\n");
      out.write("    <script type=\"text/javascript\">\r\n");
      out.write("    function makeid( length ) \r\n");
      out.write("      {\r\n");
      out.write("        var str = \"\";\r\n");
      out.write("        for ( ; str.length < length; str += Math.random().toString( 36 ).substr( 2 ) );\r\n");
      out.write("        return str.substr( 0, length );\r\n");
      out.write("\r\n");
      out.write("      }\r\n");
      out.write("    </script>\r\n");
      out.write("    <script type=\"text/javascript\">\r\n");
      out.write("      function initialize()\r\n");
      out.write("      { \r\n");
      out.write("      x=document.getElementById(\"questionId\");\r\n");
      out.write("      y=document.getElementById(\"userId\");\r\n");
      out.write("      alert(x.innerHTML+\"  \"+y.innerHTML);\r\n");
      out.write("        q=\"What are constructors in Java?\";\r\n");
      out.write("        a=\"In Java, constructor refers to a block of code which is used to initialize an object. It must have the same name as that of the class. Also, it has no return type and it is automatically called when an object is created.There are two types of constructors:Default constructor Parameterized constructor\";\r\n");
      out.write("        createPost(x.innerHTML,y.innerHTML,\"\",\"\",\"\",\"\",\"\",\"\");\r\n");
      out.write("     \r\n");
      out.write("      }\r\n");
      out.write("      window.addEventListener('load',loadThreadDetails);\r\n");
      out.write("    </script>\r\n");
      out.write("  </head>\r\n");
      out.write("  <body>\r\n");
      out.write("    <!--include header-->\r\n");
      out.write("    ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "myHeader.jsp", out, false);
      out.write("\r\n");
      out.write("    \r\n");
      out.write("\r\n");
      out.write("    <!--post Description-->\r\n");
      out.write("    <div id=\"postSection\" class=\"container-fluid\" style=\"padding-bottom: 30px;display: none;left: 0px; top: 0px; position: relative; background-color:white;opacity: .9;margin-top: 20px\">\r\n");
      out.write("    </div>\r\n");
      out.write("    <!--post Description-->\r\n");
      out.write("\r\n");
      out.write("<!--Inclide askQuestionForm Modal-->\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "askQuestionForm.jsp", out, false);
      out.write("\r\n");
      out.write("<!--Inclide addPostForm Modal-->\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "addPostForm.jsp", out, false);
      out.write("\r\n");
      out.write("<!--Inclide signUpForm Modal-->\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "signUpForm.jsp", out, false);
      out.write("\r\n");
      out.write("<!--Inclide signInForm Modal-->\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "signInForm.jsp", out, false);
      out.write("\r\n");
      out.write("\r\n");
      out.write("    <!-- Footer section add later -->\r\n");
      out.write("    <!-- Footer -->\r\n");
      out.write("  </body>\r\n");
      out.write("</html>\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
